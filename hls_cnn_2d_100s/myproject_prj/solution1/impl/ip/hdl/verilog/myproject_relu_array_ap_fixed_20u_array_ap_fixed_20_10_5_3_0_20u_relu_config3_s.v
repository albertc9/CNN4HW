// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_relu_array_ap_fixed_20u_array_ap_fixed_20_10_5_3_0_20u_relu_config3_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        layer2_out_dout,
        layer2_out_num_data_valid,
        layer2_out_fifo_cap,
        layer2_out_empty_n,
        layer2_out_read,
        layer3_out_din,
        layer3_out_num_data_valid,
        layer3_out_fifo_cap,
        layer3_out_full_n,
        layer3_out_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [399:0] layer2_out_dout;
input  [8:0] layer2_out_num_data_valid;
input  [8:0] layer2_out_fifo_cap;
input   layer2_out_empty_n;
output   layer2_out_read;
output  [399:0] layer3_out_din;
input  [8:0] layer3_out_num_data_valid;
input  [8:0] layer3_out_fifo_cap;
input   layer3_out_full_n;
output   layer3_out_write;

reg ap_idle;
reg layer2_out_read;
reg layer3_out_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln41_fu_313_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    layer2_out_blk_n;
wire    ap_block_pp0_stage0;
reg    layer3_out_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] select_ln51_fu_544_p3;
reg   [7:0] select_ln51_reg_1798;
wire   [2:0] select_ln51_1_fu_552_p3;
reg   [2:0] select_ln51_1_reg_1803;
wire   [7:0] select_ln51_2_fu_586_p3;
reg   [7:0] select_ln51_2_reg_1808;
wire   [3:0] select_ln51_3_fu_594_p3;
reg   [3:0] select_ln51_3_reg_1813;
wire   [7:0] select_ln51_4_fu_628_p3;
reg   [7:0] select_ln51_4_reg_1818;
wire   [3:0] select_ln51_5_fu_636_p3;
reg   [3:0] select_ln51_5_reg_1823;
wire   [7:0] select_ln51_6_fu_670_p3;
reg   [7:0] select_ln51_6_reg_1828;
wire   [3:0] select_ln51_7_fu_678_p3;
reg   [3:0] select_ln51_7_reg_1833;
wire   [7:0] select_ln51_8_fu_712_p3;
reg   [7:0] select_ln51_8_reg_1838;
wire   [3:0] select_ln51_9_fu_720_p3;
reg   [3:0] select_ln51_9_reg_1843;
wire   [7:0] select_ln51_10_fu_754_p3;
reg   [7:0] select_ln51_10_reg_1848;
wire   [3:0] select_ln51_11_fu_762_p3;
reg   [3:0] select_ln51_11_reg_1853;
wire   [7:0] select_ln51_12_fu_796_p3;
reg   [7:0] select_ln51_12_reg_1858;
wire   [3:0] select_ln51_13_fu_804_p3;
reg   [3:0] select_ln51_13_reg_1863;
wire   [7:0] select_ln51_14_fu_838_p3;
reg   [7:0] select_ln51_14_reg_1868;
wire   [3:0] select_ln51_15_fu_846_p3;
reg   [3:0] select_ln51_15_reg_1873;
wire   [7:0] select_ln51_16_fu_880_p3;
reg   [7:0] select_ln51_16_reg_1878;
wire   [3:0] select_ln51_17_fu_888_p3;
reg   [3:0] select_ln51_17_reg_1883;
wire   [7:0] select_ln51_18_fu_922_p3;
reg   [7:0] select_ln51_18_reg_1888;
wire   [3:0] select_ln51_19_fu_930_p3;
reg   [3:0] select_ln51_19_reg_1893;
wire   [7:0] select_ln51_20_fu_964_p3;
reg   [7:0] select_ln51_20_reg_1898;
wire   [3:0] select_ln51_21_fu_972_p3;
reg   [3:0] select_ln51_21_reg_1903;
wire   [7:0] select_ln51_22_fu_1006_p3;
reg   [7:0] select_ln51_22_reg_1908;
wire   [3:0] select_ln51_23_fu_1014_p3;
reg   [3:0] select_ln51_23_reg_1913;
wire   [7:0] select_ln51_24_fu_1048_p3;
reg   [7:0] select_ln51_24_reg_1918;
wire   [3:0] select_ln51_25_fu_1056_p3;
reg   [3:0] select_ln51_25_reg_1923;
wire   [7:0] select_ln51_26_fu_1090_p3;
reg   [7:0] select_ln51_26_reg_1928;
wire   [3:0] select_ln51_27_fu_1098_p3;
reg   [3:0] select_ln51_27_reg_1933;
wire   [7:0] select_ln51_28_fu_1132_p3;
reg   [7:0] select_ln51_28_reg_1938;
wire   [3:0] select_ln51_29_fu_1140_p3;
reg   [3:0] select_ln51_29_reg_1943;
wire   [7:0] select_ln51_30_fu_1174_p3;
reg   [7:0] select_ln51_30_reg_1948;
wire   [3:0] select_ln51_31_fu_1182_p3;
reg   [3:0] select_ln51_31_reg_1953;
wire   [7:0] select_ln51_32_fu_1216_p3;
reg   [7:0] select_ln51_32_reg_1958;
wire   [3:0] select_ln51_33_fu_1224_p3;
reg   [3:0] select_ln51_33_reg_1963;
wire   [7:0] select_ln51_34_fu_1258_p3;
reg   [7:0] select_ln51_34_reg_1968;
wire   [3:0] select_ln51_35_fu_1266_p3;
reg   [3:0] select_ln51_35_reg_1973;
wire   [7:0] select_ln51_36_fu_1300_p3;
reg   [7:0] select_ln51_36_reg_1978;
wire   [3:0] select_ln51_37_fu_1308_p3;
reg   [3:0] select_ln51_37_reg_1983;
wire   [7:0] select_ln51_38_fu_1342_p3;
reg   [7:0] select_ln51_38_reg_1988;
wire   [3:0] select_ln51_39_fu_1350_p3;
reg   [3:0] select_ln51_39_reg_1993;
wire   [7:0] select_ln51_40_fu_1368_p3;
reg   [7:0] select_ln51_40_reg_1998;
wire   [7:0] select_ln51_41_fu_1386_p3;
reg   [7:0] select_ln51_41_reg_2003;
wire   [7:0] select_ln51_42_fu_1404_p3;
reg   [7:0] select_ln51_42_reg_2008;
wire   [7:0] select_ln51_43_fu_1422_p3;
reg   [7:0] select_ln51_43_reg_2013;
wire   [7:0] select_ln51_44_fu_1440_p3;
reg   [7:0] select_ln51_44_reg_2018;
wire   [7:0] select_ln51_45_fu_1458_p3;
reg   [7:0] select_ln51_45_reg_2023;
wire   [7:0] select_ln51_46_fu_1476_p3;
reg   [7:0] select_ln51_46_reg_2028;
wire   [7:0] select_ln51_47_fu_1494_p3;
reg   [7:0] select_ln51_47_reg_2033;
wire   [7:0] select_ln51_48_fu_1512_p3;
reg   [7:0] select_ln51_48_reg_2038;
wire   [7:0] select_ln51_49_fu_1530_p3;
reg   [7:0] select_ln51_49_reg_2043;
wire   [7:0] select_ln51_50_fu_1548_p3;
reg   [7:0] select_ln51_50_reg_2048;
wire   [7:0] select_ln51_51_fu_1566_p3;
reg   [7:0] select_ln51_51_reg_2053;
wire   [7:0] select_ln51_52_fu_1584_p3;
reg   [7:0] select_ln51_52_reg_2058;
wire   [7:0] select_ln51_53_fu_1602_p3;
reg   [7:0] select_ln51_53_reg_2063;
wire   [7:0] select_ln51_54_fu_1620_p3;
reg   [7:0] select_ln51_54_reg_2068;
wire   [7:0] select_ln51_55_fu_1638_p3;
reg   [7:0] select_ln51_55_reg_2073;
wire   [7:0] select_ln51_56_fu_1656_p3;
reg   [7:0] select_ln51_56_reg_2078;
wire   [7:0] select_ln51_57_fu_1674_p3;
reg   [7:0] select_ln51_57_reg_2083;
wire   [7:0] select_ln51_58_fu_1692_p3;
reg   [7:0] select_ln51_58_reg_2088;
wire   [7:0] select_ln51_59_fu_1710_p3;
reg   [7:0] select_ln51_59_reg_2093;
reg   [7:0] i_fu_288;
wire   [7:0] i_2_fu_319_p2;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_i_1;
reg    ap_block_pp0_stage0_01001;
wire   [19:0] trunc_ln44_fu_330_p1;
wire   [0:0] icmp_ln51_fu_524_p2;
wire   [7:0] trunc_ln52_fu_530_p1;
wire   [2:0] trunc_ln52_2_fu_534_p4;
wire   [19:0] trunc_ln44_1_fu_334_p4;
wire   [0:0] icmp_ln51_1_fu_560_p2;
wire   [7:0] trunc_ln52_3_fu_566_p4;
wire   [3:0] trunc_ln52_1_fu_576_p4;
wire   [19:0] trunc_ln44_2_fu_344_p4;
wire   [0:0] icmp_ln51_2_fu_602_p2;
wire   [7:0] trunc_ln52_6_fu_608_p4;
wire   [3:0] trunc_ln52_4_fu_618_p4;
wire   [19:0] trunc_ln44_3_fu_354_p4;
wire   [0:0] icmp_ln51_3_fu_644_p2;
wire   [7:0] trunc_ln52_9_fu_650_p4;
wire   [3:0] trunc_ln52_7_fu_660_p4;
wire   [19:0] trunc_ln44_4_fu_364_p4;
wire   [0:0] icmp_ln51_4_fu_686_p2;
wire   [7:0] trunc_ln52_s_fu_692_p4;
wire   [3:0] trunc_ln52_10_fu_702_p4;
wire   [19:0] trunc_ln44_5_fu_374_p4;
wire   [0:0] icmp_ln51_5_fu_728_p2;
wire   [7:0] trunc_ln52_5_fu_734_p4;
wire   [3:0] trunc_ln52_13_fu_744_p4;
wire   [19:0] trunc_ln44_6_fu_384_p4;
wire   [0:0] icmp_ln51_6_fu_770_p2;
wire   [7:0] trunc_ln52_8_fu_776_p4;
wire   [3:0] trunc_ln52_16_fu_786_p4;
wire   [19:0] trunc_ln44_7_fu_394_p4;
wire   [0:0] icmp_ln51_7_fu_812_p2;
wire   [7:0] trunc_ln52_11_fu_818_p4;
wire   [3:0] trunc_ln52_19_fu_828_p4;
wire   [19:0] trunc_ln44_8_fu_404_p4;
wire   [0:0] icmp_ln51_8_fu_854_p2;
wire   [7:0] trunc_ln52_12_fu_860_p4;
wire   [3:0] trunc_ln52_22_fu_870_p4;
wire   [19:0] trunc_ln44_9_fu_414_p4;
wire   [0:0] icmp_ln51_9_fu_896_p2;
wire   [7:0] trunc_ln52_14_fu_902_p4;
wire   [3:0] trunc_ln52_25_fu_912_p4;
wire   [19:0] trunc_ln44_s_fu_424_p4;
wire   [0:0] icmp_ln51_10_fu_938_p2;
wire   [7:0] trunc_ln52_15_fu_944_p4;
wire   [3:0] trunc_ln52_28_fu_954_p4;
wire   [19:0] trunc_ln44_10_fu_434_p4;
wire   [0:0] icmp_ln51_11_fu_980_p2;
wire   [7:0] trunc_ln52_17_fu_986_p4;
wire   [3:0] trunc_ln52_29_fu_996_p4;
wire   [19:0] trunc_ln44_11_fu_444_p4;
wire   [0:0] icmp_ln51_12_fu_1022_p2;
wire   [7:0] trunc_ln52_18_fu_1028_p4;
wire   [3:0] trunc_ln52_30_fu_1038_p4;
wire   [19:0] trunc_ln44_12_fu_454_p4;
wire   [0:0] icmp_ln51_13_fu_1064_p2;
wire   [7:0] trunc_ln52_20_fu_1070_p4;
wire   [3:0] trunc_ln52_31_fu_1080_p4;
wire   [19:0] trunc_ln44_13_fu_464_p4;
wire   [0:0] icmp_ln51_14_fu_1106_p2;
wire   [7:0] trunc_ln52_21_fu_1112_p4;
wire   [3:0] trunc_ln52_32_fu_1122_p4;
wire   [19:0] trunc_ln44_14_fu_474_p4;
wire   [0:0] icmp_ln51_15_fu_1148_p2;
wire   [7:0] trunc_ln52_23_fu_1154_p4;
wire   [3:0] trunc_ln52_33_fu_1164_p4;
wire   [19:0] trunc_ln44_15_fu_484_p4;
wire   [0:0] icmp_ln51_16_fu_1190_p2;
wire   [7:0] trunc_ln52_24_fu_1196_p4;
wire   [3:0] trunc_ln52_34_fu_1206_p4;
wire   [19:0] trunc_ln44_16_fu_494_p4;
wire   [0:0] icmp_ln51_17_fu_1232_p2;
wire   [7:0] trunc_ln52_26_fu_1238_p4;
wire   [3:0] trunc_ln52_35_fu_1248_p4;
wire   [19:0] trunc_ln44_17_fu_504_p4;
wire   [0:0] icmp_ln51_18_fu_1274_p2;
wire   [7:0] trunc_ln52_27_fu_1280_p4;
wire   [3:0] trunc_ln52_36_fu_1290_p4;
wire   [19:0] trunc_ln44_18_fu_514_p4;
wire   [0:0] icmp_ln51_19_fu_1316_p2;
wire   [7:0] trunc_ln52_37_fu_1322_p4;
wire   [3:0] trunc_ln52_38_fu_1332_p4;
wire   [7:0] tmp_fu_1358_p4;
wire   [7:0] tmp_1_fu_1376_p4;
wire   [7:0] tmp_2_fu_1394_p4;
wire   [7:0] tmp_3_fu_1412_p4;
wire   [7:0] tmp_4_fu_1430_p4;
wire   [7:0] tmp_5_fu_1448_p4;
wire   [7:0] tmp_6_fu_1466_p4;
wire   [7:0] tmp_7_fu_1484_p4;
wire   [7:0] tmp_8_fu_1502_p4;
wire   [7:0] tmp_9_fu_1520_p4;
wire   [7:0] tmp_s_fu_1538_p4;
wire   [7:0] tmp_10_fu_1556_p4;
wire   [7:0] tmp_11_fu_1574_p4;
wire   [7:0] tmp_12_fu_1592_p4;
wire   [7:0] tmp_13_fu_1610_p4;
wire   [7:0] tmp_14_fu_1628_p4;
wire   [7:0] tmp_15_fu_1646_p4;
wire   [7:0] tmp_16_fu_1664_p4;
wire   [7:0] tmp_17_fu_1682_p4;
wire   [7:0] tmp_18_fu_1700_p4;
wire   [3:0] zext_ln57_fu_1718_p1;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_219;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 i_fu_288 = 8'd0;
end

myproject_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_219)) begin
        if ((icmp_ln41_fu_313_p2 == 1'd0)) begin
            i_fu_288 <= i_2_fu_319_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_288 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        select_ln51_10_reg_1848 <= select_ln51_10_fu_754_p3;
        select_ln51_11_reg_1853 <= select_ln51_11_fu_762_p3;
        select_ln51_12_reg_1858 <= select_ln51_12_fu_796_p3;
        select_ln51_13_reg_1863 <= select_ln51_13_fu_804_p3;
        select_ln51_14_reg_1868 <= select_ln51_14_fu_838_p3;
        select_ln51_15_reg_1873 <= select_ln51_15_fu_846_p3;
        select_ln51_16_reg_1878 <= select_ln51_16_fu_880_p3;
        select_ln51_17_reg_1883 <= select_ln51_17_fu_888_p3;
        select_ln51_18_reg_1888 <= select_ln51_18_fu_922_p3;
        select_ln51_19_reg_1893 <= select_ln51_19_fu_930_p3;
        select_ln51_1_reg_1803 <= select_ln51_1_fu_552_p3;
        select_ln51_20_reg_1898 <= select_ln51_20_fu_964_p3;
        select_ln51_21_reg_1903 <= select_ln51_21_fu_972_p3;
        select_ln51_22_reg_1908 <= select_ln51_22_fu_1006_p3;
        select_ln51_23_reg_1913 <= select_ln51_23_fu_1014_p3;
        select_ln51_24_reg_1918 <= select_ln51_24_fu_1048_p3;
        select_ln51_25_reg_1923 <= select_ln51_25_fu_1056_p3;
        select_ln51_26_reg_1928 <= select_ln51_26_fu_1090_p3;
        select_ln51_27_reg_1933 <= select_ln51_27_fu_1098_p3;
        select_ln51_28_reg_1938 <= select_ln51_28_fu_1132_p3;
        select_ln51_29_reg_1943 <= select_ln51_29_fu_1140_p3;
        select_ln51_2_reg_1808 <= select_ln51_2_fu_586_p3;
        select_ln51_30_reg_1948 <= select_ln51_30_fu_1174_p3;
        select_ln51_31_reg_1953 <= select_ln51_31_fu_1182_p3;
        select_ln51_32_reg_1958 <= select_ln51_32_fu_1216_p3;
        select_ln51_33_reg_1963 <= select_ln51_33_fu_1224_p3;
        select_ln51_34_reg_1968 <= select_ln51_34_fu_1258_p3;
        select_ln51_35_reg_1973 <= select_ln51_35_fu_1266_p3;
        select_ln51_36_reg_1978 <= select_ln51_36_fu_1300_p3;
        select_ln51_37_reg_1983 <= select_ln51_37_fu_1308_p3;
        select_ln51_38_reg_1988 <= select_ln51_38_fu_1342_p3;
        select_ln51_39_reg_1993 <= select_ln51_39_fu_1350_p3;
        select_ln51_3_reg_1813 <= select_ln51_3_fu_594_p3;
        select_ln51_40_reg_1998 <= select_ln51_40_fu_1368_p3;
        select_ln51_41_reg_2003 <= select_ln51_41_fu_1386_p3;
        select_ln51_42_reg_2008 <= select_ln51_42_fu_1404_p3;
        select_ln51_43_reg_2013 <= select_ln51_43_fu_1422_p3;
        select_ln51_44_reg_2018 <= select_ln51_44_fu_1440_p3;
        select_ln51_45_reg_2023 <= select_ln51_45_fu_1458_p3;
        select_ln51_46_reg_2028 <= select_ln51_46_fu_1476_p3;
        select_ln51_47_reg_2033 <= select_ln51_47_fu_1494_p3;
        select_ln51_48_reg_2038 <= select_ln51_48_fu_1512_p3;
        select_ln51_49_reg_2043 <= select_ln51_49_fu_1530_p3;
        select_ln51_4_reg_1818 <= select_ln51_4_fu_628_p3;
        select_ln51_50_reg_2048 <= select_ln51_50_fu_1548_p3;
        select_ln51_51_reg_2053 <= select_ln51_51_fu_1566_p3;
        select_ln51_52_reg_2058 <= select_ln51_52_fu_1584_p3;
        select_ln51_53_reg_2063 <= select_ln51_53_fu_1602_p3;
        select_ln51_54_reg_2068 <= select_ln51_54_fu_1620_p3;
        select_ln51_55_reg_2073 <= select_ln51_55_fu_1638_p3;
        select_ln51_56_reg_2078 <= select_ln51_56_fu_1656_p3;
        select_ln51_57_reg_2083 <= select_ln51_57_fu_1674_p3;
        select_ln51_58_reg_2088 <= select_ln51_58_fu_1692_p3;
        select_ln51_59_reg_2093 <= select_ln51_59_fu_1710_p3;
        select_ln51_5_reg_1823 <= select_ln51_5_fu_636_p3;
        select_ln51_6_reg_1828 <= select_ln51_6_fu_670_p3;
        select_ln51_7_reg_1833 <= select_ln51_7_fu_678_p3;
        select_ln51_8_reg_1838 <= select_ln51_8_fu_712_p3;
        select_ln51_9_reg_1843 <= select_ln51_9_fu_720_p3;
        select_ln51_reg_1798 <= select_ln51_fu_544_p3;
    end
end

always @ (*) begin
    if (((icmp_ln41_fu_313_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 8'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_288;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_out_blk_n = layer2_out_empty_n;
    end else begin
        layer2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer2_out_read = 1'b1;
    end else begin
        layer2_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer3_out_blk_n = layer3_out_full_n;
    end else begin
        layer3_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer3_out_write = 1'b1;
    end else begin
        layer3_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (layer2_out_empty_n == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (layer3_out_full_n == 1'b0);
end

always @ (*) begin
    ap_condition_219 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign i_2_fu_319_p2 = (ap_sig_allocacmp_i_1 + 8'd1);

assign icmp_ln41_fu_313_p2 = ((ap_sig_allocacmp_i_1 == 8'd247) ? 1'b1 : 1'b0);

assign icmp_ln51_10_fu_938_p2 = (($signed(trunc_ln44_s_fu_424_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_11_fu_980_p2 = (($signed(trunc_ln44_10_fu_434_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_12_fu_1022_p2 = (($signed(trunc_ln44_11_fu_444_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_13_fu_1064_p2 = (($signed(trunc_ln44_12_fu_454_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_14_fu_1106_p2 = (($signed(trunc_ln44_13_fu_464_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_15_fu_1148_p2 = (($signed(trunc_ln44_14_fu_474_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_16_fu_1190_p2 = (($signed(trunc_ln44_15_fu_484_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_17_fu_1232_p2 = (($signed(trunc_ln44_16_fu_494_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_18_fu_1274_p2 = (($signed(trunc_ln44_17_fu_504_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_19_fu_1316_p2 = (($signed(trunc_ln44_18_fu_514_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_1_fu_560_p2 = (($signed(trunc_ln44_1_fu_334_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_2_fu_602_p2 = (($signed(trunc_ln44_2_fu_344_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_3_fu_644_p2 = (($signed(trunc_ln44_3_fu_354_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_4_fu_686_p2 = (($signed(trunc_ln44_4_fu_364_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_5_fu_728_p2 = (($signed(trunc_ln44_5_fu_374_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_6_fu_770_p2 = (($signed(trunc_ln44_6_fu_384_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_7_fu_812_p2 = (($signed(trunc_ln44_7_fu_394_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_8_fu_854_p2 = (($signed(trunc_ln44_8_fu_404_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_9_fu_896_p2 = (($signed(trunc_ln44_9_fu_414_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_524_p2 = (($signed(trunc_ln44_fu_330_p1) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign layer3_out_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{select_ln51_39_reg_1993}, {select_ln51_40_reg_1998}}, {select_ln51_38_reg_1988}}, {select_ln51_37_reg_1983}}, {select_ln51_41_reg_2003}}, {select_ln51_36_reg_1978}}, {select_ln51_35_reg_1973}}, {select_ln51_42_reg_2008}}, {select_ln51_34_reg_1968}}, {select_ln51_33_reg_1963}}, {select_ln51_43_reg_2013}}, {select_ln51_32_reg_1958}}, {select_ln51_31_reg_1953}}, {select_ln51_44_reg_2018}}, {select_ln51_30_reg_1948}}, {select_ln51_29_reg_1943}}, {select_ln51_45_reg_2023}}, {select_ln51_28_reg_1938}}, {select_ln51_27_reg_1933}}, {select_ln51_46_reg_2028}}, {select_ln51_26_reg_1928}}, {select_ln51_25_reg_1923}}, {select_ln51_47_reg_2033}}, {select_ln51_24_reg_1918}}, {select_ln51_23_reg_1913}}, {select_ln51_48_reg_2038}}, {select_ln51_22_reg_1908}}, {select_ln51_21_reg_1903}}, {select_ln51_49_reg_2043}}, {select_ln51_20_reg_1898}}, {select_ln51_19_reg_1893}}, {select_ln51_50_reg_2048}}, {select_ln51_18_reg_1888}}, {select_ln51_17_reg_1883}}, {select_ln51_51_reg_2053}}, 
    {select_ln51_16_reg_1878}}, {select_ln51_15_reg_1873}}, {select_ln51_52_reg_2058}}, {select_ln51_14_reg_1868}}, {select_ln51_13_reg_1863}}, {select_ln51_53_reg_2063}}, {select_ln51_12_reg_1858}}, {select_ln51_11_reg_1853}}, {select_ln51_54_reg_2068}}, {select_ln51_10_reg_1848}}, {select_ln51_9_reg_1843}}, {select_ln51_55_reg_2073}}, {select_ln51_8_reg_1838}}, {select_ln51_7_reg_1833}}, {select_ln51_56_reg_2078}}, {select_ln51_6_reg_1828}}, {select_ln51_5_reg_1823}}, {select_ln51_57_reg_2083}}, {select_ln51_4_reg_1818}}, {select_ln51_3_reg_1813}}, {select_ln51_58_reg_2088}}, {select_ln51_2_reg_1808}}, {zext_ln57_fu_1718_p1}}, {select_ln51_59_reg_2093}}, {select_ln51_reg_1798}};

assign select_ln51_10_fu_754_p3 = ((icmp_ln51_5_fu_728_p2[0:0] == 1'b1) ? trunc_ln52_5_fu_734_p4 : 8'd0);

assign select_ln51_11_fu_762_p3 = ((icmp_ln51_5_fu_728_p2[0:0] == 1'b1) ? trunc_ln52_13_fu_744_p4 : 4'd0);

assign select_ln51_12_fu_796_p3 = ((icmp_ln51_6_fu_770_p2[0:0] == 1'b1) ? trunc_ln52_8_fu_776_p4 : 8'd0);

assign select_ln51_13_fu_804_p3 = ((icmp_ln51_6_fu_770_p2[0:0] == 1'b1) ? trunc_ln52_16_fu_786_p4 : 4'd0);

assign select_ln51_14_fu_838_p3 = ((icmp_ln51_7_fu_812_p2[0:0] == 1'b1) ? trunc_ln52_11_fu_818_p4 : 8'd0);

assign select_ln51_15_fu_846_p3 = ((icmp_ln51_7_fu_812_p2[0:0] == 1'b1) ? trunc_ln52_19_fu_828_p4 : 4'd0);

assign select_ln51_16_fu_880_p3 = ((icmp_ln51_8_fu_854_p2[0:0] == 1'b1) ? trunc_ln52_12_fu_860_p4 : 8'd0);

assign select_ln51_17_fu_888_p3 = ((icmp_ln51_8_fu_854_p2[0:0] == 1'b1) ? trunc_ln52_22_fu_870_p4 : 4'd0);

assign select_ln51_18_fu_922_p3 = ((icmp_ln51_9_fu_896_p2[0:0] == 1'b1) ? trunc_ln52_14_fu_902_p4 : 8'd0);

assign select_ln51_19_fu_930_p3 = ((icmp_ln51_9_fu_896_p2[0:0] == 1'b1) ? trunc_ln52_25_fu_912_p4 : 4'd0);

assign select_ln51_1_fu_552_p3 = ((icmp_ln51_fu_524_p2[0:0] == 1'b1) ? trunc_ln52_2_fu_534_p4 : 3'd0);

assign select_ln51_20_fu_964_p3 = ((icmp_ln51_10_fu_938_p2[0:0] == 1'b1) ? trunc_ln52_15_fu_944_p4 : 8'd0);

assign select_ln51_21_fu_972_p3 = ((icmp_ln51_10_fu_938_p2[0:0] == 1'b1) ? trunc_ln52_28_fu_954_p4 : 4'd0);

assign select_ln51_22_fu_1006_p3 = ((icmp_ln51_11_fu_980_p2[0:0] == 1'b1) ? trunc_ln52_17_fu_986_p4 : 8'd0);

assign select_ln51_23_fu_1014_p3 = ((icmp_ln51_11_fu_980_p2[0:0] == 1'b1) ? trunc_ln52_29_fu_996_p4 : 4'd0);

assign select_ln51_24_fu_1048_p3 = ((icmp_ln51_12_fu_1022_p2[0:0] == 1'b1) ? trunc_ln52_18_fu_1028_p4 : 8'd0);

assign select_ln51_25_fu_1056_p3 = ((icmp_ln51_12_fu_1022_p2[0:0] == 1'b1) ? trunc_ln52_30_fu_1038_p4 : 4'd0);

assign select_ln51_26_fu_1090_p3 = ((icmp_ln51_13_fu_1064_p2[0:0] == 1'b1) ? trunc_ln52_20_fu_1070_p4 : 8'd0);

assign select_ln51_27_fu_1098_p3 = ((icmp_ln51_13_fu_1064_p2[0:0] == 1'b1) ? trunc_ln52_31_fu_1080_p4 : 4'd0);

assign select_ln51_28_fu_1132_p3 = ((icmp_ln51_14_fu_1106_p2[0:0] == 1'b1) ? trunc_ln52_21_fu_1112_p4 : 8'd0);

assign select_ln51_29_fu_1140_p3 = ((icmp_ln51_14_fu_1106_p2[0:0] == 1'b1) ? trunc_ln52_32_fu_1122_p4 : 4'd0);

assign select_ln51_2_fu_586_p3 = ((icmp_ln51_1_fu_560_p2[0:0] == 1'b1) ? trunc_ln52_3_fu_566_p4 : 8'd0);

assign select_ln51_30_fu_1174_p3 = ((icmp_ln51_15_fu_1148_p2[0:0] == 1'b1) ? trunc_ln52_23_fu_1154_p4 : 8'd0);

assign select_ln51_31_fu_1182_p3 = ((icmp_ln51_15_fu_1148_p2[0:0] == 1'b1) ? trunc_ln52_33_fu_1164_p4 : 4'd0);

assign select_ln51_32_fu_1216_p3 = ((icmp_ln51_16_fu_1190_p2[0:0] == 1'b1) ? trunc_ln52_24_fu_1196_p4 : 8'd0);

assign select_ln51_33_fu_1224_p3 = ((icmp_ln51_16_fu_1190_p2[0:0] == 1'b1) ? trunc_ln52_34_fu_1206_p4 : 4'd0);

assign select_ln51_34_fu_1258_p3 = ((icmp_ln51_17_fu_1232_p2[0:0] == 1'b1) ? trunc_ln52_26_fu_1238_p4 : 8'd0);

assign select_ln51_35_fu_1266_p3 = ((icmp_ln51_17_fu_1232_p2[0:0] == 1'b1) ? trunc_ln52_35_fu_1248_p4 : 4'd0);

assign select_ln51_36_fu_1300_p3 = ((icmp_ln51_18_fu_1274_p2[0:0] == 1'b1) ? trunc_ln52_27_fu_1280_p4 : 8'd0);

assign select_ln51_37_fu_1308_p3 = ((icmp_ln51_18_fu_1274_p2[0:0] == 1'b1) ? trunc_ln52_36_fu_1290_p4 : 4'd0);

assign select_ln51_38_fu_1342_p3 = ((icmp_ln51_19_fu_1316_p2[0:0] == 1'b1) ? trunc_ln52_37_fu_1322_p4 : 8'd0);

assign select_ln51_39_fu_1350_p3 = ((icmp_ln51_19_fu_1316_p2[0:0] == 1'b1) ? trunc_ln52_38_fu_1332_p4 : 4'd0);

assign select_ln51_3_fu_594_p3 = ((icmp_ln51_1_fu_560_p2[0:0] == 1'b1) ? trunc_ln52_1_fu_576_p4 : 4'd0);

assign select_ln51_40_fu_1368_p3 = ((icmp_ln51_19_fu_1316_p2[0:0] == 1'b1) ? tmp_fu_1358_p4 : 8'd0);

assign select_ln51_41_fu_1386_p3 = ((icmp_ln51_18_fu_1274_p2[0:0] == 1'b1) ? tmp_1_fu_1376_p4 : 8'd0);

assign select_ln51_42_fu_1404_p3 = ((icmp_ln51_17_fu_1232_p2[0:0] == 1'b1) ? tmp_2_fu_1394_p4 : 8'd0);

assign select_ln51_43_fu_1422_p3 = ((icmp_ln51_16_fu_1190_p2[0:0] == 1'b1) ? tmp_3_fu_1412_p4 : 8'd0);

assign select_ln51_44_fu_1440_p3 = ((icmp_ln51_15_fu_1148_p2[0:0] == 1'b1) ? tmp_4_fu_1430_p4 : 8'd0);

assign select_ln51_45_fu_1458_p3 = ((icmp_ln51_14_fu_1106_p2[0:0] == 1'b1) ? tmp_5_fu_1448_p4 : 8'd0);

assign select_ln51_46_fu_1476_p3 = ((icmp_ln51_13_fu_1064_p2[0:0] == 1'b1) ? tmp_6_fu_1466_p4 : 8'd0);

assign select_ln51_47_fu_1494_p3 = ((icmp_ln51_12_fu_1022_p2[0:0] == 1'b1) ? tmp_7_fu_1484_p4 : 8'd0);

assign select_ln51_48_fu_1512_p3 = ((icmp_ln51_11_fu_980_p2[0:0] == 1'b1) ? tmp_8_fu_1502_p4 : 8'd0);

assign select_ln51_49_fu_1530_p3 = ((icmp_ln51_10_fu_938_p2[0:0] == 1'b1) ? tmp_9_fu_1520_p4 : 8'd0);

assign select_ln51_4_fu_628_p3 = ((icmp_ln51_2_fu_602_p2[0:0] == 1'b1) ? trunc_ln52_6_fu_608_p4 : 8'd0);

assign select_ln51_50_fu_1548_p3 = ((icmp_ln51_9_fu_896_p2[0:0] == 1'b1) ? tmp_s_fu_1538_p4 : 8'd0);

assign select_ln51_51_fu_1566_p3 = ((icmp_ln51_8_fu_854_p2[0:0] == 1'b1) ? tmp_10_fu_1556_p4 : 8'd0);

assign select_ln51_52_fu_1584_p3 = ((icmp_ln51_7_fu_812_p2[0:0] == 1'b1) ? tmp_11_fu_1574_p4 : 8'd0);

assign select_ln51_53_fu_1602_p3 = ((icmp_ln51_6_fu_770_p2[0:0] == 1'b1) ? tmp_12_fu_1592_p4 : 8'd0);

assign select_ln51_54_fu_1620_p3 = ((icmp_ln51_5_fu_728_p2[0:0] == 1'b1) ? tmp_13_fu_1610_p4 : 8'd0);

assign select_ln51_55_fu_1638_p3 = ((icmp_ln51_4_fu_686_p2[0:0] == 1'b1) ? tmp_14_fu_1628_p4 : 8'd0);

assign select_ln51_56_fu_1656_p3 = ((icmp_ln51_3_fu_644_p2[0:0] == 1'b1) ? tmp_15_fu_1646_p4 : 8'd0);

assign select_ln51_57_fu_1674_p3 = ((icmp_ln51_2_fu_602_p2[0:0] == 1'b1) ? tmp_16_fu_1664_p4 : 8'd0);

assign select_ln51_58_fu_1692_p3 = ((icmp_ln51_1_fu_560_p2[0:0] == 1'b1) ? tmp_17_fu_1682_p4 : 8'd0);

assign select_ln51_59_fu_1710_p3 = ((icmp_ln51_fu_524_p2[0:0] == 1'b1) ? tmp_18_fu_1700_p4 : 8'd0);

assign select_ln51_5_fu_636_p3 = ((icmp_ln51_2_fu_602_p2[0:0] == 1'b1) ? trunc_ln52_4_fu_618_p4 : 4'd0);

assign select_ln51_6_fu_670_p3 = ((icmp_ln51_3_fu_644_p2[0:0] == 1'b1) ? trunc_ln52_9_fu_650_p4 : 8'd0);

assign select_ln51_7_fu_678_p3 = ((icmp_ln51_3_fu_644_p2[0:0] == 1'b1) ? trunc_ln52_7_fu_660_p4 : 4'd0);

assign select_ln51_8_fu_712_p3 = ((icmp_ln51_4_fu_686_p2[0:0] == 1'b1) ? trunc_ln52_s_fu_692_p4 : 8'd0);

assign select_ln51_9_fu_720_p3 = ((icmp_ln51_4_fu_686_p2[0:0] == 1'b1) ? trunc_ln52_10_fu_702_p4 : 4'd0);

assign select_ln51_fu_544_p3 = ((icmp_ln51_fu_524_p2[0:0] == 1'b1) ? trunc_ln52_fu_530_p1 : 8'd0);

assign tmp_10_fu_1556_p4 = {{layer2_out_dout[175:168]}};

assign tmp_11_fu_1574_p4 = {{layer2_out_dout[155:148]}};

assign tmp_12_fu_1592_p4 = {{layer2_out_dout[135:128]}};

assign tmp_13_fu_1610_p4 = {{layer2_out_dout[115:108]}};

assign tmp_14_fu_1628_p4 = {{layer2_out_dout[95:88]}};

assign tmp_15_fu_1646_p4 = {{layer2_out_dout[75:68]}};

assign tmp_16_fu_1664_p4 = {{layer2_out_dout[55:48]}};

assign tmp_17_fu_1682_p4 = {{layer2_out_dout[35:28]}};

assign tmp_18_fu_1700_p4 = {{layer2_out_dout[15:8]}};

assign tmp_1_fu_1376_p4 = {{layer2_out_dout[375:368]}};

assign tmp_2_fu_1394_p4 = {{layer2_out_dout[355:348]}};

assign tmp_3_fu_1412_p4 = {{layer2_out_dout[335:328]}};

assign tmp_4_fu_1430_p4 = {{layer2_out_dout[315:308]}};

assign tmp_5_fu_1448_p4 = {{layer2_out_dout[295:288]}};

assign tmp_6_fu_1466_p4 = {{layer2_out_dout[275:268]}};

assign tmp_7_fu_1484_p4 = {{layer2_out_dout[255:248]}};

assign tmp_8_fu_1502_p4 = {{layer2_out_dout[235:228]}};

assign tmp_9_fu_1520_p4 = {{layer2_out_dout[215:208]}};

assign tmp_fu_1358_p4 = {{layer2_out_dout[395:388]}};

assign tmp_s_fu_1538_p4 = {{layer2_out_dout[195:188]}};

assign trunc_ln44_10_fu_434_p4 = {{layer2_out_dout[239:220]}};

assign trunc_ln44_11_fu_444_p4 = {{layer2_out_dout[259:240]}};

assign trunc_ln44_12_fu_454_p4 = {{layer2_out_dout[279:260]}};

assign trunc_ln44_13_fu_464_p4 = {{layer2_out_dout[299:280]}};

assign trunc_ln44_14_fu_474_p4 = {{layer2_out_dout[319:300]}};

assign trunc_ln44_15_fu_484_p4 = {{layer2_out_dout[339:320]}};

assign trunc_ln44_16_fu_494_p4 = {{layer2_out_dout[359:340]}};

assign trunc_ln44_17_fu_504_p4 = {{layer2_out_dout[379:360]}};

assign trunc_ln44_18_fu_514_p4 = {{layer2_out_dout[399:380]}};

assign trunc_ln44_1_fu_334_p4 = {{layer2_out_dout[39:20]}};

assign trunc_ln44_2_fu_344_p4 = {{layer2_out_dout[59:40]}};

assign trunc_ln44_3_fu_354_p4 = {{layer2_out_dout[79:60]}};

assign trunc_ln44_4_fu_364_p4 = {{layer2_out_dout[99:80]}};

assign trunc_ln44_5_fu_374_p4 = {{layer2_out_dout[119:100]}};

assign trunc_ln44_6_fu_384_p4 = {{layer2_out_dout[139:120]}};

assign trunc_ln44_7_fu_394_p4 = {{layer2_out_dout[159:140]}};

assign trunc_ln44_8_fu_404_p4 = {{layer2_out_dout[179:160]}};

assign trunc_ln44_9_fu_414_p4 = {{layer2_out_dout[199:180]}};

assign trunc_ln44_fu_330_p1 = layer2_out_dout[19:0];

assign trunc_ln44_s_fu_424_p4 = {{layer2_out_dout[219:200]}};

assign trunc_ln52_10_fu_702_p4 = {{layer2_out_dout[99:96]}};

assign trunc_ln52_11_fu_818_p4 = {{layer2_out_dout[147:140]}};

assign trunc_ln52_12_fu_860_p4 = {{layer2_out_dout[167:160]}};

assign trunc_ln52_13_fu_744_p4 = {{layer2_out_dout[119:116]}};

assign trunc_ln52_14_fu_902_p4 = {{layer2_out_dout[187:180]}};

assign trunc_ln52_15_fu_944_p4 = {{layer2_out_dout[207:200]}};

assign trunc_ln52_16_fu_786_p4 = {{layer2_out_dout[139:136]}};

assign trunc_ln52_17_fu_986_p4 = {{layer2_out_dout[227:220]}};

assign trunc_ln52_18_fu_1028_p4 = {{layer2_out_dout[247:240]}};

assign trunc_ln52_19_fu_828_p4 = {{layer2_out_dout[159:156]}};

assign trunc_ln52_1_fu_576_p4 = {{layer2_out_dout[39:36]}};

assign trunc_ln52_20_fu_1070_p4 = {{layer2_out_dout[267:260]}};

assign trunc_ln52_21_fu_1112_p4 = {{layer2_out_dout[287:280]}};

assign trunc_ln52_22_fu_870_p4 = {{layer2_out_dout[179:176]}};

assign trunc_ln52_23_fu_1154_p4 = {{layer2_out_dout[307:300]}};

assign trunc_ln52_24_fu_1196_p4 = {{layer2_out_dout[327:320]}};

assign trunc_ln52_25_fu_912_p4 = {{layer2_out_dout[199:196]}};

assign trunc_ln52_26_fu_1238_p4 = {{layer2_out_dout[347:340]}};

assign trunc_ln52_27_fu_1280_p4 = {{layer2_out_dout[367:360]}};

assign trunc_ln52_28_fu_954_p4 = {{layer2_out_dout[219:216]}};

assign trunc_ln52_29_fu_996_p4 = {{layer2_out_dout[239:236]}};

assign trunc_ln52_2_fu_534_p4 = {{layer2_out_dout[18:16]}};

assign trunc_ln52_30_fu_1038_p4 = {{layer2_out_dout[259:256]}};

assign trunc_ln52_31_fu_1080_p4 = {{layer2_out_dout[279:276]}};

assign trunc_ln52_32_fu_1122_p4 = {{layer2_out_dout[299:296]}};

assign trunc_ln52_33_fu_1164_p4 = {{layer2_out_dout[319:316]}};

assign trunc_ln52_34_fu_1206_p4 = {{layer2_out_dout[339:336]}};

assign trunc_ln52_35_fu_1248_p4 = {{layer2_out_dout[359:356]}};

assign trunc_ln52_36_fu_1290_p4 = {{layer2_out_dout[379:376]}};

assign trunc_ln52_37_fu_1322_p4 = {{layer2_out_dout[387:380]}};

assign trunc_ln52_38_fu_1332_p4 = {{layer2_out_dout[399:396]}};

assign trunc_ln52_3_fu_566_p4 = {{layer2_out_dout[27:20]}};

assign trunc_ln52_4_fu_618_p4 = {{layer2_out_dout[59:56]}};

assign trunc_ln52_5_fu_734_p4 = {{layer2_out_dout[107:100]}};

assign trunc_ln52_6_fu_608_p4 = {{layer2_out_dout[47:40]}};

assign trunc_ln52_7_fu_660_p4 = {{layer2_out_dout[79:76]}};

assign trunc_ln52_8_fu_776_p4 = {{layer2_out_dout[127:120]}};

assign trunc_ln52_9_fu_650_p4 = {{layer2_out_dout[67:60]}};

assign trunc_ln52_fu_530_p1 = layer2_out_dout[7:0];

assign trunc_ln52_s_fu_692_p4 = {{layer2_out_dout[87:80]}};

assign zext_ln57_fu_1718_p1 = select_ln51_1_reg_1803;

endmodule //myproject_relu_array_ap_fixed_20u_array_ap_fixed_20_10_5_3_0_20u_relu_config3_s
